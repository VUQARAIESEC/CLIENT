{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\ShippingAddressScreen.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nexport default function ShippingAddressScreen(props) {\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [lat, setLat] = useState(shippingAddress.lat);\n  const [lng, setLng] = useState(shippingAddress.lng);\n  const userAddressMap = useSelector(state => state.userAddressMap);\n  const {\n    address: addressMap\n  } = userAddressMap;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newLat = addressMap ? addressMap.lat : lat;\n    const newLng = addressMap ? addressMap.lng : lng;\n\n    if (addressMap) {\n      setLat(addressMap.lat);\n      setLng(addressMap.lng);\n    }\n\n    let moveOn = true;\n\n    if (moveOn) {\n      dispatch(saveShippingAddress({\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n        lat: newLat,\n        lng: newLng\n      }));\n      props.history.push('/payment');\n    }\n  };\n\n  const chooseOnMap = () => {\n    dispatch(saveShippingAddress({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country,\n      lat,\n      lng\n    }));\n    props.history.push('/map');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shippingadress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutSteps, {\n    step1: true,\n    step2: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center font-bold text-[25px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mt-[15px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Shipping Address\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"fullName\",\n    placeholder: \"Enter full name\",\n    value: fullName,\n    onChange: e => setFullName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address\",\n    placeholder: \"Enter address\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"city\",\n    placeholder: \"Enter city\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"postalCode\",\n    placeholder: \"Enter postal code\",\n    value: postalCode,\n    onChange: e => setPostalCode(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"country\",\n    placeholder: \"Enter country\",\n    value: country,\n    onChange: e => setCountry(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"greenbtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Continue\"))));\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useState","useDispatch","useSelector","saveShippingAddress","CheckoutSteps","ShippingAddressScreen","props","userSignin","state","userInfo","cart","shippingAddress","lat","setLat","lng","setLng","userAddressMap","address","addressMap","history","push","fullName","setFullName","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","newLat","newLng","moveOn","chooseOnMap","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nexport default function ShippingAddressScreen(props) {\n  const userSignin = useSelector((state) => state.userSignin);\n\n  const { userInfo } = userSignin;\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  const [lat, setLat] = useState(shippingAddress.lat);\n  const [lng, setLng] = useState(shippingAddress.lng);\n  const userAddressMap = useSelector((state) => state.userAddressMap);\n  const { address: addressMap } = userAddressMap;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const newLat = addressMap ? addressMap.lat : lat;\n    const newLng = addressMap ? addressMap.lng : lng;\n    if (addressMap) {\n      setLat(addressMap.lat);\n      setLng(addressMap.lng);\n    }\n    let moveOn = true;\n    \n    if (moveOn) {\n      dispatch(\n        saveShippingAddress({\n          fullName,\n          address,\n          city,\n          postalCode,\n          country,\n          lat: newLat,\n          lng: newLng,\n        })\n      );\n      props.history.push('/payment');\n    }\n  };\n  const chooseOnMap = () => {\n    dispatch(\n      saveShippingAddress({\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n        lat,\n        lng,\n      })\n    );\n    props.history.push('/map');\n  };\n  return (\n    <div className='shippingadress'>\n      <CheckoutSteps step1 step2></CheckoutSteps>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div className='text-center font-bold text-[25px]'>\n          <h1 className='mt-[15px]'>Shipping Address</h1>\n        </div>\n        <div>\n          <label htmlFor=\"fullName\">Full Name</label>\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            placeholder=\"Enter full name\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"address\">Address</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            placeholder=\"Enter address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            id=\"city\"\n            placeholder=\"Enter city\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"postalCode\">Postal Code</label>\n          <input\n            type=\"text\"\n            id=\"postalCode\"\n            placeholder=\"Enter postal code\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"country\">Country</label>\n          <input\n            type=\"text\"\n            id=\"country\"\n            placeholder=\"Enter country\"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n            required\n          ></input>\n        </div>\n\n\n        <div>\n          <label />\n          <button className=\"greenbtn\" type=\"submit\">\n            Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}